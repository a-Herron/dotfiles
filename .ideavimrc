let mapleader=" "

set scrolloff=10
set relativenumber
set number
set showmode
set visualbell
set noerrorbells

nmap <leader>sf <Action>(GotoFile)
nmap <leader>sg <Action>(TextSearchAction)

nmap <C-z> <Action>(ToggleDistractionFreeMode)

nmap gr <Action>(FindUsages)
nmap gi <Action>(GotoImplementation)
nmap gd <Action>(GotoDeclaration)

nmap <leader>ca <Action>(ShowIntentionActions)

nmap [r <Action>(NextOccurence)
nmap ]r <Action>(PreviousOccurence)
nmap [d <Action>(ReSharperGotoPrevErrorInSolution)
nmap ]d <Action>(ReSharperGotoNextErrorInSolution)
nmap [b :bprev<Cr>
nmap ]b :bnext<Cr>

nmap <leader>h :action ShowHarpoon<Cr>

nmap <leader>a :action AddToHarpoon<Cr>

nmap <M-1> :action GotoHarpoon1<Cr>
nmap <M-2> :action GotoHarpoon2<Cr>
nmap <M-3> :action GotoHarpoon3<Cr>
nmap <M-4> :action GotoHarpoon4<Cr>
nmap <M-5> :action GotoHarpoon5<Cr>
nmap <M-6> :action GotoHarpoon6<Cr>
nmap <M-7> :action GotoHarpoon7<Cr>
nmap <M-8> :action GotoHarpoon8<Cr>
nmap <M-9> :action GotoHarpoon9<Cr>

nmap <leader>rn <Action>(RenameElement)

nmap <leader><leader> <Action>(CodeCompletion)

nmap <leader>e <Action>(ShowErrorDescription)

nmap <leader>t <Action>(ActivateTerminalToolWindow)


nnoremap <leader>sd <Action>(Rider.ProblemsView.ErrorsInSolution)

nmap <C-h> :action HideActiveWindow<Cr>
